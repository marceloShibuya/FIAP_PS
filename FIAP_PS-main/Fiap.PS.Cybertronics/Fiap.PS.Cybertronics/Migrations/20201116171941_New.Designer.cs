// <auto-generated />
using System;
using Fiap.PS.Cybertronics.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fiap.PS.Cybertronics.Migrations
{
    [DbContext(typeof(CrmContext))]
    [Migration("20201116171941_New")]
    partial class New
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("TB_CLIENTE");
                });

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpresaId");

                    b.ToTable("TB_EMPRESA");
                });

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFabricacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("Dt_Fabricacao");

                    b.Property<DateTime>("DataGarantia")
                        .HasColumnType("datetime2")
                        .HasColumnName("Dt_Garantia");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoServico")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("TB_PRODUTO");
                });

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.ProdutoUsuarios", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ProdutoUsuarios");
                });

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<int>("Cargo")
                        .HasColumnType("int");

                    b.Property<string>("Contato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("TB_USUARIO");
                });

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.Produto", b =>
                {
                    b.HasOne("Fiap.PS.Cybertronics.Models.Cliente", "Cliente")
                        .WithMany("Produtos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Fiap.PS.Cybertronics.Models.Empresa", "Empresa")
                        .WithMany("Produtos")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.ProdutoUsuarios", b =>
                {
                    b.HasOne("Fiap.PS.Cybertronics.Models.Produto", "Produto")
                        .WithMany("ProdutoUsuarios")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fiap.PS.Cybertronics.Models.Usuario", "Usuario")
                        .WithMany("ProdutoUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.Cliente", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.Empresa", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.Produto", b =>
                {
                    b.Navigation("ProdutoUsuarios");
                });

            modelBuilder.Entity("Fiap.PS.Cybertronics.Models.Usuario", b =>
                {
                    b.Navigation("ProdutoUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
